# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestSocialHubIDE():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_socialHubIDE(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(945, 1020)
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"login-button\"]").click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Twitter")))
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.LINK_TEXT, "Twitter").click()
    self.vars["win5009"] = self.wait_for_window(2000)
    self.vars["root"] = self.driver.current_window_handle
    self.driver.switch_to.window(self.vars["win5009"])
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".css-4rbku5 > .css-1dbjc4n > .css-1dbjc4n > .css-1dbjc4n > .css-1dbjc4n > .css-901oao > .css-901oao > .css-901oao:nth-child(1)")))
    assert self.driver.title == "Sauce Labs (@saucelabs) / Twitter"
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.LINK_TEXT, "Facebook").click()
    self.vars["win881"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win881"])
    self.driver.find_element(By.CSS_SELECTOR, ".x5oxk1f").click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".x14qwyeo > .x1heor9g")))
    assert self.driver.find_element(By.CSS_SELECTOR, ".x14qwyeo > .x1heor9g").text == "Sauce Labs"
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.LINK_TEXT, "LinkedIn").click()
    self.vars["win8459"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win8459"])
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#ember27 > span")))
    assert self.driver.find_element(By.CSS_SELECTOR, "#ember27 > span").text == "Sauce Labs"
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.close()
  
